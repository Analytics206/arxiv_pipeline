services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  neo4j:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/password
    restart: unless-stopped

  api:
    build: .
    command: uvicorn src.api.main:app --host 0.0.0.0 --port 8000
    depends_on:
      - mongodb
      - qdrant
      - neo4j
    environment:
      - MONGO_CONNECTION_STRING=mongodb://mongodb:27017/
      - MONGO_DB=arxiv_papers
      - MONGO_COLLECTION=papers
      - MONGO_TRACKING_COLLECTION=vector_processed_pdfs
      - QDRANT_HOST=qdrant
      - QDRANT_PORT=6333
      - QDRANT_COLLECTION=arxiv_papers
      - NEO4J_URI=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
    volumes:
      - ./config:/app/config
    ports:
      - "8000:8000"

  # Qdrant container is commented out as we're using local Qdrant with GPU support
  # Uncomment this section if you want to run Qdrant in Docker again
  qdrant:
   image: qdrant/qdrant:latest
   ports:
     - "6333:6333"
     - "6334:6334"
   volumes:
     - qdrant_data:/qdrant/storage
   restart: unless-stopped
   # GPU Support configuration
   deploy:
     resources:
       reservations:
         devices:
           - driver: nvidia
             count: 1
             capabilities: [gpu]
   environment:
     - CUDA_VISIBLE_DEVICES=1  # Use second GPU
     - QDRANT_ENABLE_CUDA=true # Enable CUDA support

  app:
    build: .
    depends_on:
      - mongodb
      - neo4j
      - qdrant
    environment:
      - MONGO_CONNECTION_STRING=mongodb://mongodb:27017/
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      # Point to local Qdrant instance instead of Docker container
      - QDRANT_URL=http://host.docker.internal:6333
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      
  sync-mongodb:
    profiles:
      - manual
    build: .
    command: python -m src.pipeline.sync_mongodb --config /app/config/default.yaml
    depends_on:
      - mongodb
    environment:
      - MONGO_CONNECTION_STRING=mongodb://mongodb:27017/ #change to localhost?
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      
  sync-neo4j:
    profiles:
      - manual
    build: .
    command: python -m src.graph.sync_mongo_to_neo4j
    depends_on:
      - mongodb
      - neo4j
    environment:
      - MONGO_CONNECTION_STRING=mongodb://mongodb:27017/
      
  sync-bertopic:
    profiles:
      - manual
    build: .
    command: python -m src.pipeline.insert_bertopic_mongodb --config /app/config/default.yaml
    depends_on:
      - mongodb
    environment:
      - MONGO_URI=mongodb://mongodb:27017/
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      
  sync-qdrant:
    profiles:
      - manual
    build: .
    command: python -m src.pipeline.sync_qdrant
    environment:
      - MONGO_URI=mongodb://mongodb:27017/
      - QDRANT_URL=http://qdrant:6333
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      - "E:/AI Research:/app/data/pdfs"
    depends_on:
      - mongodb
      - qdrant

  web-ui:
    build:
      context: ./src/web-ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - api
    environment:
      # Direct Neo4j environment vars are kept for backward compatibility but are now used via API
      - REACT_APP_NEO4J_URI=bolt://neo4j:7687
      - REACT_APP_NEO4J_USER=neo4j
      - REACT_APP_NEO4J_PASSWORD=password
      - REACT_APP_API_BASE_URL=http://api:8000
    volumes:
      - ./src/web-ui/src/config:/app/public/config
      
  jupyter-scipy:
    profiles:
      - manual
    image: jupyter/scipy-notebook:latest
    ports:
      - "8888:8888"
    volumes:
      - ./config:/home/jovyan/work/config
      - ./data:/home/jovyan/work/data
      - ./src:/home/jovyan/work/src
      - E:/AI Research:/home/jovyan/work/pdfs
    environment:
      - JUPYTER_ENABLE_LAB=yes
      - MONGO_CONNECTION_STRING=mongodb://mongodb:27017/
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      - QDRANT_URL=http://host.docker.internal:6333
    depends_on:
      - mongodb
      - neo4j
      - qdrant

  zookeeper:
    profiles:
      - manual
    image: confluentinc/cp-zookeeper:7.4.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_log:/var/lib/zookeeper/log
    restart: unless-stopped

  kafka:
    profiles:
      - manual
    image: confluentinc/cp-kafka:7.4.0
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "29092:29092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: true
    volumes:
      - kafka_data:/var/lib/kafka/data
    restart: unless-stopped
    
  kafka-ui:
    profiles:
      - manual
    image: provectuslabs/kafka-ui:latest
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: arxiv-pipeline
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    restart: unless-stopped

volumes:
  mongo_data:
  neo4j_data:
  qdrant_data:
  zookeeper_data:
  zookeeper_log:
  kafka_data: