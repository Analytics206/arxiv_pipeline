services:
  mongodb:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    restart: unless-stopped

  neo4j:
    image: neo4j:latest
    ports:
      - "7474:7474"
      - "7687:7687"
    volumes:
      - neo4j_data:/data
    environment:
      - NEO4J_AUTH=neo4j/password
    restart: unless-stopped

  api:
    build:
      context: ./src/api
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    depends_on:
      - mongodb
    environment:
      - MONGO_CONNECTION_STRING=mongodb://mongodb:27017/
    volumes:
      - ./src/api:/app
    ports:
      - "8000:8000"

  # Qdrant container is commented out as we're using local Qdrant with GPU support
  # Uncomment this section if you want to run Qdrant in Docker again
  #qdrant:
  #  image: qdrant/qdrant:latest
  #  ports:
  #    - "6333:6333"
  #    - "6334:6334"
  #  volumes:
  #    - qdrant_data:/qdrant/storage
  #  restart: unless-stopped
  #  # GPU Support configuration
  #  deploy:
  #    resources:
  #      reservations:
  #        devices:
  #          - driver: nvidia
  #            count: 1
  #            capabilities: [gpu]
  #  environment:
  #    - CUDA_VISIBLE_DEVICES=1  # Use second GPU
  #    - QDRANT_ENABLE_CUDA=true # Enable CUDA support

  app:
    build: .
    depends_on:
      - mongodb
      - neo4j
      # Qdrant dependency removed as we're using local Qdrant now
    environment:
      - MONGO_CONNECTION_STRING=mongodb://mongodb:27017/
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
      # Point to local Qdrant instance instead of Docker container
      - QDRANT_URL=http://host.docker.internal:6333
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      
  sync-mongodb:
    build: .
    command: python -m src.pipeline.sync_mongodb --config /app/config/default.yaml
    depends_on:
      - mongodb
    environment:
      - MONGO_CONNECTION_STRING=mongodb://localhost:27017/config #change to localhost?
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      
  sync-neo4j:
    build: .
    command: python -m src.graph.sync_mongo_to_neo4j
    depends_on:
      - mongodb
      - neo4j
    environment:
      - MONGO_CONNECTION_STRING=mongodb://mongodb:27017/
      - NEO4J_URL=bolt://neo4j:7687
      - NEO4J_USER=neo4j
      - NEO4J_PASSWORD=password
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      
  sync-qdrant:
    build: .
    command: python -m src.pipeline.sync_qdrant
    # Removed Qdrant container dependency
    environment:
      # Point to local Qdrant instance using host.docker.internal
      - QDRANT_URL=http://host.docker.internal:6333
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      # Map your Windows PDF directory to /app/data/pdfs in the container
      - E:/AI Research:/app/data/pdfs
      
  web-ui:
    build:
      context: ./src/web-ui
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    depends_on:
      - neo4j
    environment:
      - REACT_APP_NEO4J_URI=bolt://neo4j:7687
      - REACT_APP_NEO4J_USER=neo4j
      - REACT_APP_NEO4J_PASSWORD=password
    volumes:
      - ./src/web-ui/src/config:/app/public/config

  # Simple test service to verify Docker volume mounting
  test-mount:
    build: .
    command: python /app/test_docker_mount.py
    volumes:
      - ./config:/app/config
      - ./data:/app/data
      # Map your Windows PDF directory to /app/data/pdfs in the container
      - E:/AI Research:/app/data/pdfs
      - ./test_docker_mount.py:/app/test_docker_mount.py

volumes:
  mongo_data:
  neo4j_data:
  qdrant_data: