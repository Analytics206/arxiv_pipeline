# ArXiv Pipeline Configuration

# MongoDB settings
mongo:
  connection_string: "mongodb://mongodb:27017/"
  db_name: "arxiv_papers"
  
# Neo4j settings
neo4j:
  url: "bolt://neo4j:7687"
  user: "neo4j"
  password: "password"

# Qdrant settings
qdrant:
  url: "http://localhost:6333"
  collection_name: "arxiv_papers"
  vector_size: 768  # For sentence-transformers models
  # Categories to prioritize for vector storage - these will be processed into Qdrant
  process_categories: # used in process_pdf.py
    - "cs.AI"
    - "cs.CV"
    - "cs.LG"

# ArXiv API settings 
arxiv:
  categories: # used in download_pdfs.py and docker compose logs -f pipeline, 
    - "cs.AI"
    - "cs.CV"
    - "cs.CL"
    - "cs.DS"
    - "cs.GT" 
    - "cs.LG"  
    - "cs.LO"
    - "cs.MA"
    - "cs.NA"
    - "cs.NE"
    - "math.PR"
    - "physics.data-an"
    - "q-bio.NC"
    - "stat"
    - "stat.ML"
    - "stat.TH"
  max_results: 200 # Number of papers to fetch per category loop, 200 is max but can fail so set to 100
  sort_by: "submittedDate"
  sort_order: "descending"
  max_iterations: 10 # Number of times to loop the pipeline for each category above
  rate_limit_seconds: 3
  start_date: "2025-04-01" # start_date is used in arxiv api call and save pdfs filters
  end_date: "2025-05-03" # end_date is not used in arxiv api call, only have start_date, used when saving pdfs

# Embedding model settings
embedding:
  model_name: "all-MiniLM-L6-v2"  # Smaller model to start with
  batch_size: 32

# PDF storage settings
pdf_storage:
  directory: "E:/AI Research" # where papers are downloaded @download_pdfs.py subdirectory is auto created by category
  default_pdf_path: "E:/AI Research" # where papers are loaded into qdrant @Process_pdf.py
  papers_per_category: 500 # Maximum number of papers to download per category (0 for unlimited)
  # Date filters for downloading PDFs
  download_date_filter:
    enabled: true         # Set to false to disable date filtering
    start_date: "2025-04-01" # Download papers published on or after this date (format: YYYY-MM-DD)
    end_date: "2025-05-03"   # Download papers published on or before this date (format: YYYY-MM-DD)
    sort_by_date: true    # Sort MongoDB query by published date

# Logging settings
logging:
  level: "INFO"
  file: "logs/pipeline.log"